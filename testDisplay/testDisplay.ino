// Writes increasing values to the Dials to test each segment.

#define SCK 18 //Clk
#define MOSI 23 //Data

void setup() {
  Serial.begin(115200);
  pinMode(SCK, OUTPUT);
  pinMode(MOSI, OUTPUT);

  digitalWrite(MOSI, HIGH);
  digitalWrite(SCK, HIGH);
  delay(100);

  digitalWrite(MOSI, LOW);
  digitalWrite(SCK, LOW);
}

void loop () {
  // 0...
  processPayload(0b01111000, 0b00111111, 0b00000000, 0b00000000, 0b00000000, 0b00010000, 0b10011110, 0b01000001, 0b00100000, 0b00010000, 0b00000000, 0b00000000);
  delay(1000); // 1
  processPayload(0b00011000, 0b11001100, 0b00000000, 0b00000000, 0b00000000, 0b00010000, 0b10011000, 0b01000001, 0b00100000, 0b00010000, 0b00000000, 0b00000000);
  delay(1000); // 2
  processPayload(0b10110000, 0b11011011, 0b00111111, 0b00000000, 0b00000000, 0b00010000, 0b10110111, 0b10000010, 0b01000000, 0b01100000, 0b00000000, 0b00000000);
  delay(1000); // 3
  processPayload(0b10111100, 0b11011110, 0b11111111, 0b00000001, 0b00000000, 0b00010000, 0b10110101, 0b10000110, 0b11000001, 0b11100000, 0b00000001, 0b00000000);
  delay(1000); // 4
  processPayload(0b11011000, 0b11101100, 0b11111111, 0b00000111, 0b00000000, 0b00010000, 0b10110001, 0b10001110, 0b11000011, 0b11100001, 0b00000011, 0b00000000);
  delay(1000); // 5
  processPayload(0b11101000, 0b11110110, 0b11111111, 0b00111111, 0b00000000, 0b00010000, 0b10110101, 0b10011110, 0b11000111, 0b11100011, 0b00000111, 0b00010000);
  delay(1000); // 6
  processPayload(0b11101000, 0b11110111, 0b11111111, 0b11111111, 0b00000001, 0b00010000, 0b10110111, 0b10111110, 0b11001111, 0b11100111, 0b00011111, 0b10100000);
  delay(1000); // 7 
  processPayload(0b00111000, 0b11011100, 0b11111111, 0b11111111, 0b00000111, 0b00010100, 0b10110000, 0b10111110, 0b11011111, 0b11101111, 0b111111111, 0b11100001);
  delay(1000); // 8
  processPayload(0b11111000, 0b11111111, 0b11111111, 0b11111111, 0b00011111, 0b00010000, 0b10110111, 0b10111110, 0b11011111, 0b11101111, 0b111111111, 0b11100001);
  delay(1000); // 9
  processPayload(0b11111000, 0b11111110, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b10110101, 0b10111110, 0b11011111, 0b11101111, 0b111111111, 0b11100001);
  delay(1000);
}

